{"version":3,"sources":["./src/app/componentes/mostar-detalle-actor/mostar-detalle-actor.component.ts","./src/app/componentes/mostar-detalle-actor/mostar-detalle-actor.component.html","./src/app/componentes/tabla-pais/tabla-pais.component.ts","./src/app/componentes/tabla-pais/tabla-pais.component.html","./src/app/componentes/mostar-pais-actor/mostar-pais-actor.component.html","./src/app/componentes/mostar-pais-actor/mostar-pais-actor.component.ts","./src/app/componentes/mostar-pelicula-actor/mostar-pelicula-actor.component.ts","./src/app/componentes/mostar-pelicula-actor/mostar-pelicula-actor.component.html","./src/app/actores/pelicula-actor/pelicula-actor.component.ts","./src/app/actores/pelicula-actor/pelicula-actor.component.html","./src/app/actores/alta-actores/alta-actores.component.ts","./src/app/actores/alta-actores/alta-actores.component.html","./src/app/componentes/pais-tabla/pais-tabla.component.ts","./src/app/componentes/pais-tabla/pais-tabla.component.html","./src/app/actores/actores-routing.module.ts","./src/app/actores/actores.module.ts","./src/app/actores/listado-actores/listado-actores.component.ts","./src/app/actores/listado-actores/listado-actores.component.html","./src/app/componentes/tabla-actor-pelicula/tabla-actor-pelicula.component.ts","./src/app/componentes/tabla-actor-pelicula/tabla-actor-pelicula.component.html"],"names":[],"mappings":"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","file":"actores-actores-module.js","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { Actor } from 'src/app/clases/actor';\nimport { Repartidor } from '../../clases/repartidor'\n\n@Component({\n  selector: 'app-mostar-detalle-actor',\n  templateUrl: './mostar-detalle-actor.component.html',\n  styleUrls: ['./mostar-detalle-actor.component.css']\n})\nexport class MostarDetalleActorComponent implements OnInit {\n\n  @Input() actorDetalle: Repartidor;\n   \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  Volver(){\n\n  }\n}\n","<h2>Detalle del Repartidor</h2>\n<div class=\"col-md-12\">\n   <strong><span>Nombre: </span></strong>{{actorDetalle.nombre}}\n   <br>\n   <strong><span>DNI: </span></strong> {{actorDetalle.dni}}\n   <p><strong><span>Edad: </span></strong>{{actorDetalle.edad}} </p>\n   <p><strong><span>Unidad: </span></strong>{{actorDetalle.unidad}} </p>\n   <p><strong><span>País : </span></strong> {{actorDetalle.pais}} </p>\n   <!-- <button class=\"btn btn-secondary\" (click)=\"Volver()\" role=\"button\">Volver</button> -->\n</div>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Actor } from 'src/app/clases/actor';\nimport { Pais } from 'src/app/clases/pais';\nimport { PaisService } from 'src/app/servicios/pais.service';\n\n//import { Country } from '../../interfaces/pais.interface';\n\n@Component({\n  selector: 'app-tabla-pais',\n  templateUrl: './tabla-pais.component.html',\n  styleUrls: ['./tabla-pais.component.css']\n})\nexport class TablaPaisComponent implements OnInit {\n \n  actor:any|Actor;\n  paises:Array<any>=[];\n  paisSelesccionado:any|Pais;\n  \n  @Output()  eventoPaisSeleccionado : EventEmitter<Pais> = new EventEmitter<Pais>();\n  \n  constructor(public paisService:PaisService) { }\n\n  ngOnInit(): void {\n    this.cargarPais();\n  }\n\n  cargarPais(){\n\n    this.paises=[];\n    this.paisService.getPaises().subscribe(\n      (data:any) => {\n        for (let index = 0; index < data.length; index++) {\n          const unPais = data[index];\n          let nombre = unPais.name.common;\n          let foto = unPais.flags.png;\n          let paisNuevo: Pais = {\n            nombre:nombre,\n            foto:foto\n          }\n          this.paises.push(paisNuevo);\n        }\n       this.paises= this.paises.slice(0,5);\n      }\n    );\n    console.log('Array Paises: ', this.paises);\n  }\n\n  emitirPais(pais:Pais)\n  {\n    this.eventoPaisSeleccionado.emit(pais);\n  }\n  \n}\n","<div *ngFor=\"let itemPais of paises\" >\n    <div class=\"d-flex justify-content-between align-items-center mb-3\">\n        <h4 >\n            <span class=\"text-muted\">{{itemPais.nombre}}</span>\n            </h4> \n            <button (click)=\"emitirPais(itemPais.nombre)\"><img  [src]=\"itemPais.foto\" style=\"float:center;\n            width:  50px;\n            height: 50px;\n            object-fit: scale-down;\n        \"> </button>    \n    </div> \n          \n</div>","<div class=\"container\" >\n  <h2>País del Repartidor</h2>\n  <div class=\"col-md-12\">\n    <!-- <strong><span>{{actorDetalle.apellido}} </span></strong> -->\n    <strong><span> Nombre : </span></strong> {{actorDetalle.nombre}}\n    <br>\n    <strong><span> País   : </span></strong> {{actorDetalle.pais}}\n\n    <table class=\"table\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Región</th>\n            <th scope=\"col\">Capital</th>\n            <th scope=\"col\">Bandera</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let itempais of paises\">\n            <td>{{itempais.region}}</td>\n            <td>{{itempais.capital}}</td>\n            <td><img width=\"80 px\" [src]=\"itempais.flags.png\"></td>\n          </tr>\n        </tbody>\n      </table>\n    <!-- <button class=\"btn btn-secondary\" (click)=\"Volver()\" role=\"button\">Limpiar</button> -->\n  </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Actor } from 'src/app/clases/actor';\nimport { Pais } from 'src/app/clases/pais';\nimport { Repartidor } from 'src/app/clases/repartidor';\nimport { PaisService } from 'src/app/servicios/pais.service';\nimport { Country } from '../../interfaces/pais.interface';\n\n@Component({\n  selector: 'app-mostar-pais-actor',\n  templateUrl: './mostar-pais-actor.component.html',\n  styleUrls: ['./mostar-pais-actor.component.css']\n})\nexport class MostarPaisActorComponent implements OnInit {\n\n  termino : string = '';\n  hayError: boolean = false;\n  paises  : Pais[] = [];\n  mostrarSugerencias: boolean = false;\n\n  @Input() actorDetalle: Repartidor;//Actor;\n\n  constructor(private _paisService:PaisService) { }\n\n  ngOnInit(): void {\n    this.paises = [];\n    this.termino = this.actorDetalle.pais;\n    this.buscar(this.termino);\n  }\n\n  ngOnChanges(changes: Repartidor) {\n    console.log(changes);\n    this.paises = [];\n    this.termino = this.actorDetalle.pais;\n    this.buscar(this.termino);\n  }\n\n  buscar( termino: string ) {\n    \n    this.mostrarSugerencias = false;\n    this.hayError = false;\n    this.termino  = termino;\n    \n    this._paisService.getPaisByName( termino )\n      .subscribe( (paisesDevuelto) => {\n        console.log('Ver Pais Repartidor ',paisesDevuelto);\n        this.paises = paisesDevuelto;\n        console.log('Ver Pais Repartidor imprimir ',this.paises);\n        \n      }, (err) => {\n        this.hayError = true;\n        this.paises   = [];\n      });\n\n  }\n  Volver(){\n    //this.elent = false;\n    this.paises=[];\n  }\n}\n","import { Component,Input, OnInit } from '@angular/core';\nimport { Actor } from 'src/app/clases/actor';\nimport { Pelicula } from '../../clases/pelicula';\nimport { PeliculaService } from '../../servicios/pelicula.service';\nimport { pipe, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-mostar-pelicula-actor',\n  templateUrl: './mostar-pelicula-actor.component.html',\n  styleUrls: ['./mostar-pelicula-actor.component.css']\n})\nexport class MostarPeliculaActorComponent implements OnInit {\n\n  @Input() actorDetalle: Actor;\n  datoActor:string;\n  peliculas?:Pelicula[]=[];\n  lasPeliculas?:Pelicula[]=[];\n  suscriptionList: Subscription = new Subscription();\n  elent:boolean = false;\n\n  \n  constructor(private _peliculaService:PeliculaService) { }\n\n  ngOnInit(): void {\n    this.datoActor = this.actorDetalle.nombre +' '+this.actorDetalle.apellido;\n    console.log('Dato Actor para filtrar Peliculs ',this.datoActor);\n    this.getPeliculas();\n  }\n\n  getPeliculas(){\n    //this.datoActor = this.actorDetalle.nombre +' '+this.actorDetalle.apellido;\n    this.suscriptionList == this._peliculaService.getListadoPeliculas().subscribe(data =>{\n      //console.log(data);\n      this.peliculas = [];\n      //this.loading = false;\n      data.forEach((element:any) => {\n        this.peliculas.push({\n          id:element.payload.doc.id,\n          ...element.payload.doc.data()\n        })\n        //console.log('Id ',element.payload.doc.id);\n        //console.log('data ',element.payload.doc.data());\n      });\n      console.log('Listado Peliculas',this.peliculas);\n      this.lasPeliculas = this.peliculas.filter(dato => dato.actor === this.datoActor);\n      console.log('Peliculas ',this.lasPeliculas);\n    })\n\n  }\n\n  Volver(){\n    this.lasPeliculas = [];\n  }\n}\n","<h2>Repartidor</h2>\n<div class=\"col-md-12\">\n   <strong><span>{{actorDetalle.apellido}} </span></strong>\n   <strong><span>{{actorDetalle.nombre}} </span></strong> \n   <br>\n   <table class=\"table\">\n    <thead>\n      <tr>\n        <th scope=\"col\">Titulo</th>\n        <th scope=\"col\">Imagen</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let itempelicula of lasPeliculas\">\n        <td>{{itempelicula.nombre}}</td>\n        <td><img width=\"80 px\" [src]=\"itempelicula.fotoDeLaPelicula\"></td>\n      </tr>\n    </tbody>\n  </table>\n   <!-- <button class=\"btn btn-secondary\" (click)=\"Volver()\" role=\"button\">Limpiar</button> -->\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Actor } from 'src/app/clases/actor';\nimport { ActorService } from 'src/app/servicios/actor.service';\nimport { Subscription } from 'rxjs';\nimport { element } from 'protractor';\nimport { Repartidor } from 'src/app/clases/repartidor';\n\n@Component({\n  selector: 'app-pelicula-actor',\n  templateUrl: './pelicula-actor.component.html',\n  styleUrls: ['./pelicula-actor.component.css']\n})\nexport class PeliculaActorComponent implements OnInit {\n  actorNombre: string;\n  actorDetalle?:Repartidor;\n  repartidoresEnviados?:Repartidor[]=[];\n  suscriptionList: Subscription = new Subscription();\n  elent:boolean = false;\n  actualDetalleActor?:Repartidor;\n\n  constructor(private _actorService:ActorService) { }\n\n  ngOnInit(): void {\n    this.getActores();\n  }\n\n  mostrarDetalleActor(repartidoresEnviados:Repartidor){\n    this.actualDetalleActor= repartidoresEnviados;\n    this.elent = true;\n  }\n  \n  getActores(){\n    this.suscriptionList == this._actorService.getListadoRepartidores().subscribe(data =>{\n      this.repartidoresEnviados = [];\n      data.forEach((element:any) => {\n        this.repartidoresEnviados.push({\n          id:element.payload.doc.id,\n          ...element.payload.doc.data()\n        })\n        console.log(element.payload.doc.id);\n        console.log(element.payload.doc.data());\n      });\n      console.log(this.repartidoresEnviados);\n    })\n  }\n\n  ngOnDestroy(): void {\n     //this.suscriptionUser.unsubscribe();\n      this.suscriptionList.unsubscribe();\n   }\n}\n","<app-menu-gral></app-menu-gral>\n<!-- Main jumbotron for a primary marketing message or call to action &raquo;-->\n<div class=\"jumbotron\">\n    <div class=\"container\">\n        <app-tabla-actor-pelicula [listadoActores]=\"repartidoresEnviados\" (onActorSelccionado)=\"mostrarDetalleActor($event)\"></app-tabla-actor-pelicula>\n    </div>\n  \n    <div class=\"container\" *ngIf=\"elent\" >\n      <!-- Example row of columns -->\n      <div class=\"row\">\n        <div class=\"col-md-4\">\n          <!-- Mostrar pais del Repartidor -->\n          <app-mostar-pais-actor [actorDetalle]=\"actualDetalleActor\"></app-mostar-pais-actor>\n        </div>\n        <div class=\"col-md-4\">\n          <!-- Mostrar detalle del Repartidor -->          \n          <app-mostar-detalle-actor [actorDetalle]=\"actualDetalleActor\" ></app-mostar-detalle-actor>\n        </div>\n      </div>       \n    </div> <!-- /container -->\n <!--  </main> -->","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Pais } from 'src/app/clases/pais';\nimport { ActorService } from 'src/app/servicios/actor.service';\nimport { ErrorService } from 'src/app/servicios/error.service';\nimport { PaisService } from 'src/app/servicios/pais.service';\nimport { Actor } from '../../clases/actor';\nimport { Repartidor } from 'src/app/clases/repartidor';\nimport { ToastrService } from 'ngx-toastr';\nimport { Country } from '../../interfaces/pais.interface';\n\n@Component({\n  selector: 'app-alta-actores',\n  templateUrl: './alta-actores.component.html',\n  styleUrls: ['./alta-actores.component.css']\n})\nexport class AltaActoresComponent implements OnInit {\n  //Por región\n  regiones: string[] = ['Americas', 'Europe', 'Africa'];\n  regionActiva: string = '';\n  paises: Country[] = [];\n\n  //prop para manejo de la lista de paises\n  actor:any|Actor;\n  paisSeleccionado:any|Pais;\n  //paises:any|Pais = [];\n  //Formulario Validar\n  registrarForm: FormGroup;\n  loading = false;\n  public pais:string=\"Elegir Pais\";\n  //paisService: any;\n\n  constructor( public _unActor: ActorService,\n               private fb: FormBuilder,\n               private rutas: Router,\n               private _errorService: ErrorService,\n               private _paisesService: PaisService,\n               private toastr: ToastrService,\n               private paisService: PaisService\n               ) { \n\n                this.registrarForm = this.fb.group({\n                  nombre: ['',[Validators.required, Validators.minLength(4)]],\n                  dni: ['',[Validators.required, Validators.minLength(6)]],\n                  edad: ['',[Validators.required, Validators.min(18)]],\n                  capcidad: ['',[Validators.required, Validators.minLength(2)]],\n                  unidad: ['',[Validators.required]],\n                  pais:['']\n                })\n  }\n\n  ngOnInit(): void {\n    this._paisesService.getPaises().subscribe(\n      data=>{\n        this.paisSeleccionado=data;\n      }\n    )\n  }\n\n  mostrarPais(paisNombre:string){\n    this.pais=paisNombre;\n  }\n\n  registarRepartidor(){\n    console.log('Registar');\n    this.loading = true;\n    const datoRepartidor: Repartidor = {\n      nombre: this.registrarForm.get('nombre')?.value,\n      dni: this.registrarForm.get('dni')?.value,\n      edad: this.registrarForm.get('edad')?.value,\n      capcidad: this.registrarForm.get('capcidad')?.value,\n      unidad: this.registrarForm.get('unidad')?.value,\n      pais:this.pais\n    }\n    this._unActor.crearRepartidor(datoRepartidor).then(resp => {\n      this.showSuccess();\n    }).catch((error) => {\n      this.showError(error);\n    });\n    //this.rutas.navigate(['actores/listadoActores']);\n  }\n  showSuccess() {\n    this.toastr.success('Se guardó correctamente');\n  }\n\n  showError(error: any) {\n    this.toastr.error('Algo salió mal. Error: ' + error);\n  }\n\n  getClaseCSS( region: string ): string {\n    return (region === this.regionActiva) \n              ? 'btn btn-primary'\n              : 'btn btn-outline-primary';\n  }\n\n  activarRegion( region: string ) {\n\n    if ( region === this.regionActiva ) { return; }\n\n    this.regionActiva = region;\n    this.paises = [];\n\n    this.paisService.buscarRegion( region )\n      .subscribe( paises => this.paises = paises );\n  }\n\n  addPais(newPais: string){\n    this.pais=newPais;\n  }\n\n}\n\n","<app-menu-gral></app-menu-gral>\n<br><br><br><br>\n<div class=\"container\">\n    <div *ngIf='loading' class=\"d-flex justify-content-center mt-5\">\n        <app-spinner></app-spinner>\n    </div>\n    <div class=\"py-5 text-center\">\n        <h2>ALTA DE REPARTIDOR</h2>\n    </div>\n    <div *ngIf='!loading' class=\"row\">\n        <!--Tabla banderas-->\n        <div class=\"col-md-4 order-md-2 mb-4\"> \n            <div class=\"animate__animated animate__fadeIn animate__faster\">\n                    <h3>Buscar por Región <small> {{ regionActiva | titlecase }} </small></h3>\n                    <hr>\n                    <h5>Seleccione la Región</h5>\n                    <div class=\"row\">\n                        <div class=\"col\">\n                            <button *ngFor=\"let region of regiones\"\n                                    [class]=\"getClaseCSS( region )\"\n                                    (click)=\"activarRegion( region )\">\n                                {{ region | titlecase }}\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <div *ngIf=\"paises.length > 0\" class=\"row\">\n                    <div class=\"col\">\n                        <app-pais-tabla [paises]=\"paises\" (newPaisEvent)=\"addPais($event)\"></app-pais-tabla>\n                    </div>\n                </div>\n        </div> \n         <!--Datos actor-->\n        <div class=\"col-md-8 order-md-1\">\n            <h4 class=\"mb-3\">Datos personales</h4>\n            <form class=\"needs-validation\" [formGroup]=\"registrarForm\" (ngSubmit)=\"registarRepartidor()\">\n                <div class=\"row\">\n                   <!--  Nombre -->\n                    <div class=\"col-md-6 mb-3\">\n                        <label for=\"nombre\">Nombre:</label>\n                        <input type=\"text\" class=\"form-control\" formControlName = 'nombre'>\n                            <span class=\"text-danger\"\n                            *ngIf=\"registrarForm.get('nombre')?.hasError('required') && registrarForm.get('nombre')?.touched\">\n                                El Nombre <strong>es requerido</strong>\n                            </span>\n                            <span class=\"text-danger\"\n                            *ngIf=\"registrarForm.get('nombre')?.hasError('minlength') && registrarForm.get('nombre')?.touched\">\n                                Nombre como minimo <strong>debe tener 4 caracteres</strong>\n                            </span>\n                    </div>\n                    <!-- DNI -->\n                    <div class=\"col-md-6 mb-3\">\n                        <label for=\"dni\">DNI:</label>\n                        <input type=\"number\" class=\"form-control\" formControlName=\"dni\">\n                            <span class=\"text-danger\"\n                            *ngIf=\"registrarForm.get('dni')?.hasError('required') && registrarForm.get('dni')?.touched\">\n                                El DNI <strong>es requerido</strong>\n                            </span>\n                            <span class=\"text-danger\"\n                            *ngIf=\"registrarForm.get('dni')?.hasError('minlength') && registrarForm.get('dni')?.touched\">\n                                DNI como minimo <strong>debe tener 4 caracteres</strong>\n                            </span>\n                    </div>\n                    <!-- Edad -->\n                    <div class=\"col-md-6 mb-3\">\n                        <label for=\"edad\">EDAD </label>\n                        <input type=\"number\" class=\"form-control\" formControlName=\"edad\">\n                            <span class=\"text-danger\"\n                            *ngIf=\"registrarForm.get('edad')?.hasError('required') && registrarForm.get('edad')?.touched\">\n                                La edad <strong>es requerido</strong>\n                            </span>\n                            <span class=\"text-danger\"\n                            *ngIf=\"registrarForm.get('edad')?.hasError('edad') && registrarForm.get('edad')?.touched\">\n                                Edad <strong>invalido</strong>\n                            </span>\n                    </div>\n                    <!-- capcidad -->\n                    <div class=\"col-md-6 mb-3\">\n                        <label for=\"direccion\">Capcidad:</label>\n                        <input type=\"text\" class=\"form-control\" formControlName=\"capcidad\">\n                            <span class=\"text-danger\"\n                            *ngIf=\"registrarForm.get('capcidad')?.hasError('required') && registrarForm.get('capcidad')?.touched\">\n                                La Dirección <strong>es requerido</strong>\n                            </span>\n                            <span class=\"text-danger\"\n                            *ngIf=\"registrarForm.get('capcidad')?.hasError('minlength') && registrarForm.get('capcidad')?.touched\">\n                                Dirección como minimo <strong>debe tener 4 caracteres</strong>\n                            </span>\n                    </div>\n                    <!-- unidad -->\n                    <div class=\"col-md-6 mb-3\">\n                        <label for=\"unidad\">Unidad [SI]</label>\n                        <input type=\"radio\" class=\"form-control\" name=\"unidad\" value=\"SI\" formControlName=\"unidad\">\n                            <span class=\"text-danger\"\n                            *ngIf=\"registrarForm.get('unidad')?.hasError('required') && registrarForm.get('unidad')?.touched\">\n                                La Unidad <strong>es requerida</strong>\n                            </span>\n                    </div>\n                    <div class=\"col-md-6 mb-3\">\n                        <label for=\"unidad\">Unidad [NO]</label>\n                        <input type=\"radio\" class=\"form-control\" name=\"unidad\" value=\"NO\" formControlName=\"unidad\">\n                            <span class=\"text-danger\"\n                            *ngIf=\"registrarForm.get('unidad')?.hasError('required') && registrarForm.get('unidad')?.touched\">\n                                La Unidad <strong>es requerida</strong>\n                            </span>\n                    </div>\n                </div>\n                <!-- País -->\n                <div class=\"col-md-6 mb-3\">\n                    <label for=\"pais\">País:</label>\n                    <input type=\"text\" class=\"form-control\"  placeholder=\"{{pais}}\" \n                    formControlNamevalue=\"pais\" readonly>      \n                </div>\n                <hr class=\"mb-4\">\n                <div class=\"col-md-12 text-center\">\n                    <button type=\"submit\" [disabled]=\"registrarForm.invalid\" class=\"btn btn-primary btn-lg center-block\">Guardar</button>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Country } from '../../interfaces/pais.interface'\n\n@Component({\n  selector: 'app-pais-tabla',\n  templateUrl: './pais-tabla.component.html',\n  styleUrls: ['./pais-tabla.component.css']\n})\nexport class PaisTablaComponent implements OnInit {\n\n  @Input() paises: Country[]=[];\n  @Output() newPaisEvent = new EventEmitter<string>();\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  addNewPais(value: string){\n    this.newPaisEvent.emit(value);\n\n  }\n}\n","<table class=\"table table-hover\">\n    <thead>\n        <tr>\n            <th> # </th>\n            <th> Bandera </th>\n            <th> País </th>\n            <th> Capital </th>\n            <!-- <th> Población </th> -->\n            <th></th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let pais of paises; let i = index\"\n            class=\"animate__animated animate__fadeIn animate__faster\">\n            <td> {{ i + 1 }} </td>\n            <td>\n                <img class=\"small-flag\" [src]=\"pais.flags.png\" (click)=\"addNewPais(pais.name.common)\">\n            </td>\n            <td> {{ pais.name.common }}</td>\n            <td> {{ pais.capital }}</td>\n            <!-- <td> {{ pais.capital }}, {{ pais.name.common }}</td> -->\n            <!-- <td>{{ pais.population | number }}</td> -->\n        </tr>\n    </tbody>\n</table>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AltaActoresComponent } from './alta-actores/alta-actores.component';\nimport { ListadoActoresComponent } from './listado-actores/listado-actores.component';\nimport { PeliculaActorComponent } from './pelicula-actor/pelicula-actor.component';\n\nconst routes: Routes = [\n  {path:'altActor',component:AltaActoresComponent},\n  {path:'listadoActores',component:ListadoActoresComponent},\n  {path:'peliculaActor',component:PeliculaActorComponent},\n  {path: '', redirectTo: 'listadoActores', pathMatch:'full'},\n  {path: '**', pathMatch: 'full', redirectTo: 'bienvenido'}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ActoresRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ActoresRoutingModule } from './actores-routing.module';\nimport { AltaActoresComponent } from './alta-actores/alta-actores.component';\nimport { ListadoActoresComponent } from './listado-actores/listado-actores.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TablaPaisComponent } from '../componentes/tabla-pais/tabla-pais.component';\nimport { PeliculaActorComponent } from './pelicula-actor/pelicula-actor.component';\nimport { TablaActorPeliculaComponent } from '../componentes/tabla-actor-pelicula/tabla-actor-pelicula.component';\nimport { MostarPeliculaActorComponent } from '../componentes/mostar-pelicula-actor/mostar-pelicula-actor.component';\nimport { MostarDetalleActorComponent } from '../componentes/mostar-detalle-actor/mostar-detalle-actor.component';\nimport { MostarPaisActorComponent } from '../componentes/mostar-pais-actor/mostar-pais-actor.component';\nimport { PaisTablaComponent } from '../componentes/pais-tabla/pais-tabla.component';\n\n@NgModule({\n  declarations: [\n    AltaActoresComponent,\n    ListadoActoresComponent,\n    TablaPaisComponent,\n    PeliculaActorComponent,\n    TablaActorPeliculaComponent,\n    MostarPeliculaActorComponent,\n    MostarDetalleActorComponent,\n    MostarPaisActorComponent,\n    PaisTablaComponent\n  ],\n  imports: [\n    CommonModule,\n    ActoresRoutingModule,\n    SharedModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class ActoresModule { }\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { ActorService } from 'src/app/servicios/actor.service';\nimport { Actor } from '../../clases/actor';\n\n@Component({\n  selector: 'app-listado-actores',\n  templateUrl: './listado-actores.component.html',\n  styleUrls: ['./listado-actores.component.css']\n})\nexport class ListadoActoresComponent implements OnInit {\n  //suscriptionUser: Subscription = new Subscription();\n  suscriptionList: Subscription = new Subscription();\n  listActores: Actor[] = [];\n  loading = false;\n\n  constructor(private afAuth: AngularFireAuth,\n              private router: Router,\n              private _actorService: ActorService) { }\n\n  ngOnInit(): void {\n    this.loading = true;\n    //this.suscriptionUser = this.afAuth.user.subscribe(user => {\n      //console.log(user);\n      this.getActores();\n\n      //Esto es para que este Logeado\n      /* if (user && user.emailVerified) {\n        // cargar listado\n      } else {\n        this.router.navigate(['/auth/login'])\n      } */\n    //})\n  }\n\n  getActores(){\n    this.suscriptionList == this._actorService.getListadoActores().subscribe(data =>{\n      //console.log(data);\n      this.listActores = [];\n      this.loading = false;\n      data.forEach((element:any) => {\n        this.listActores.push({\n          id:element.payload.doc.id,\n          ...element.payload.doc.data()\n        })\n        //console.log(element.payload.doc.id);\n        //console.log(element.payload.doc.data());\n      });\n      //console.log(this.listJuegos);\n    })\n  }\n\n  ngOnDestroy(): void {\n   //this.suscriptionUser.unsubscribe();\n     this.suscriptionList.unsubscribe();\n  }\n\n}","<app-menu-gral></app-menu-gral>\n<br><br><br><br>\n<div class=\"d-flex justify-content-center mt-3\">\n    <button class=\"btn-principal btn-quizz\">LISTADO DE ACTORES</button>\n</div>\n<div *ngIf=\"loading\" class=\"d-flex justify-content-center mt-3\">\n    <app-spinner></app-spinner>\n</div>\n<div *ngIf=\"listActores.length > 0 && !loading\" class=\"container\">\n    <div class=\"row mt-3\">\n        <div class=\"col-lg-8 offset-lg-2\">\n            <div class=\"card\">\n                <div class=\"card-body text-center\">\n                    <table class=\"table\">\n                        <thead>\n                            <tr>\n                                <th>Apellido</th>\n                                <th>Nombre</th>\n                                <th>email</th>\n                                <th>Dirección</th>\n                                <th>Nacionalidad</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let item of listActores\">\n                                <td>{{ item.apellido }}</td>\n                                <td>{{ item.nombre }}</td>\n                                <td>{{ item.email }}</td>\n                                <td>{{ item.direccion }}</td>\n                                <td>{{ item.pais }}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div *ngIf=\"listActores.length == 0 && !loading\" class=\"conteiner\">\n    <div class=\"row mt-3\">\n        <div class=\"col-lg-8 offset-lg-2\">\n            <div class=\"card\">\n                <div class=\"card-body text-center\">\n                    <h5>No hay listado para mostrar</h5>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Repartidor } from 'src/app/clases/repartidor';\n\n@Component({\n  selector: 'app-tabla-actor-pelicula',\n  templateUrl: './tabla-actor-pelicula.component.html',\n  styleUrls: ['./tabla-actor-pelicula.component.css']\n})\nexport class TablaActorPeliculaComponent implements OnInit {\n  public vista: boolean = true;\n  @Input()  listadoActores:Repartidor[]=[];\n  @Output() onActorSelccionado:EventEmitter<Repartidor>= new EventEmitter();\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  mostrarDetalleActor(repartidoresRecibidos:Repartidor){\n    this.onActorSelccionado.emit(repartidoresRecibidos);\n  }\n\n  CambiarVista() {\n    if (this.vista == true) {\n      this.vista = false;\n    }\n    else {\n      this.vista = true;\n    }\n  }\n\n\n}\n","<h1 class=\"display-3\">Repartidor detalle</h1>\n<p>Se debe utilizar tanto como grilla, con la posibilidad de intercalar la vista entre ambas.</p>\n<table *ngIf=\"vista\" class=\"table\">\n    <thead>\n      <tr>\n        <th scope=\"col\">Nombre</th>\n        <th scope=\"col\">DNI</th>\n        <th scope=\"col\">Seleccionar</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let itemactor of listadoActores\">\n        <td>{{itemactor.nombre}}</td>\n        <td>{{itemactor.dni}}</td>\n        <td><button type=\"button\" class=\" btn btn-info btn-circle btn-warning\" (click)=\"mostrarDetalleActor(itemactor)\"></button></td>  <!-- Detalle -->\n      </tr>\n    </tbody>\n  </table>\n  \n  <div *ngIf=\"!vista\"  class=\"wrapper\">\n  \n    <div (click)=\"mostrarDetalleActor(itemactor)\" *ngFor=\"let itemactor of listadoActores\">\n        <span>{{itemactor.nombre}} </span>\n        <span>{{itemactor.dni}}</span>\n    </div>\n  </div>\n  <br>\n  <p><a class=\"btn btn-primary btn-lg\" (click)=\"CambiarVista()\" role=\"button\">Cambiar vista  </a></p>"],"sourceRoot":"webpack:///"}