{"version":3,"sources":["./src/app/peliculas/peliculas.module.ts","./src/app/peliculas/alta-peliculas/alta-peliculas.component.ts","./src/app/peliculas/alta-peliculas/alta-peliculas.component.html","./src/app/componentes/tabla-actor/tabla-actor.component.ts","./src/app/componentes/tabla-actor/tabla-actor.component.html","./src/app/clases/enum.enum.ts","./src/app/clases/actor.ts","./src/app/peliculas/peliculas-routing.module.ts","./src/app/peliculas/listado-peliculas/listado-peliculas.component.ts","./src/app/peliculas/listado-peliculas/listado-peliculas.component.html"],"names":[],"mappings":"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","file":"peliculas-peliculas-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PeliculasRoutingModule } from './peliculas-routing.module';\nimport { AltaPeliculasComponent } from './alta-peliculas/alta-peliculas.component';\nimport { ListadoPeliculasComponent } from './listado-peliculas/listado-peliculas.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TablaActorComponent } from '../componentes/tabla-actor/tabla-actor.component';\n\n\n@NgModule({\n  declarations: [\n    AltaPeliculasComponent,\n    ListadoPeliculasComponent,\n    TablaActorComponent\n  ],\n  imports: [\n    CommonModule,\n    PeliculasRoutingModule,\n    SharedModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class PeliculasModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ErrorService } from 'src/app/servicios/error.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { ActorService } from 'src/app/servicios/actor.service';\nimport { PeliculaService } from 'src/app/servicios/pelicula.service';\nimport { Pelicula } from '../../clases/pelicula2';\nimport { eTipo } from 'src/app/clases/enum.enum';\nimport { Actor } from 'src/app/clases/actor';\n//import { Observable } from 'rxjs';\n//import { Storage } from '@angulaar/fire/storage';\n\n@Component({\n  selector: 'app-alta-peliculas',\n  templateUrl: './alta-peliculas.component.html',\n  styleUrls: ['./alta-peliculas.component.css']\n})\nexport class AltaPeliculasComponent implements OnInit {\n\n  //Formulario Validar\n  registrarForm: FormGroup;\n  loading = false;\n  public actorNombre:string;\n  public opcionestipos = Object.values(eTipo);\n  public obtengoFile:string;\n\n  /* basePath = '/images';                       //  <<<<<<<\n  downloadableURL = '';                      //  <<<<<<<\n  task: AngularFireUploadTask;\n  progressValue: Observable<number>; */\n  \n  constructor(public _unPelicula: PeliculaService,\n              private fb: FormBuilder,\n              private rutas: Router,\n              private _errorService: ErrorService,\n              private _actoresService: ActorService,\n              private toastr: ToastrService ) {\n\n              this.registrarForm = this.fb.group({\n                  nombre: ['',[Validators.required, Validators.minLength(4)]],\n                  tipo: ['',Validators.required],\n                  fechaDeEstreno: ['',Validators.required],\n                  cantidadDePublico: ['',[Validators.required, Validators.min(4)]],\n                  fotoDeLaPelicula: ['no la guardo aun'],\n                  actorNombreApellido: ['']\n              })   \n  }\n\n  ngOnInit(): void {\n  }\n\n  registar(){\n    console.log('Registar');\n    this.loading = true;\n    \n    const datoGrabar: Pelicula = {\n      id:0,\n      nombre: this.registrarForm.get('nombre')?.value,\n      tipo: this.registrarForm.get('tipo')?.value,                                 \n      fechaDeEstreno: this.registrarForm.get('fechaDeEstreno')?.value,\n      cantidadDePublico: this.registrarForm.get('cantidadDePublico')?.value,\n      fotoDeLaPelicula: this.obtengoFile,//this.registrarForm.get('fotoDeLaPelicula')?.value,\n      actor: this.actorNombre//this.registrarForm.get('actorNombreApellido')?.value\n    }\n    console.log('Datos a Grabar ',datoGrabar);\n    this._unPelicula.crearActor(datoGrabar).then(resp => {\n      this.showSuccess();\n    }).catch((error) => {\n      this.showError(error);\n    });\n    this.rutas.navigate(['peliculas/listadoPeliculas']);\n  }\n\n\n  showSuccess() {\n    this.toastr.success('Se guardó correctamente');\n  }\n\n  showError(error: any) {\n    this.toastr.error('Algo salió mal. Error: ' + error);\n  }\n\n  cambiarActor(actor: Actor) {\n    //this.actorId = actor.id;\n    this.actorNombre = actor.nombre + ' ' + actor.apellido;\n    /* this.registrarForm.setValue(value:{actorNombreApellido:any})\n    console.log(this.registrarForm.get('actorNombreApellido').value); */\n  }\n\n  uploadImage($event){\n    const file = $event.target.files[0];\n    this.obtengoFile = \"../../assets/peliculas/\"+file.name;\n    // \"../../assets/peliculas/\"+file;\n  }\n  /* async onFileChanged(event) {\n    const file = event.target.files[0];\n    if (file) {\n      const filePath = `${this.basePath}/${file.name}`;  // path at which image will be stored in the firebase storage\n      this.task = this.fireStorage.upload(filePath, file);    // upload task\n\n      this.progressValue = this.task.percentageChanges();       // <<<<< Percentage of uploading is given\n      (await this.task).ref.getDownloadURL().then(url => { this.downloadableURL = url; });  // <<< url is found here\n    } else {\n      alert('No images selected');\n      this.downloadableURL = '';\n    }\n  } */\n\n}\n","<app-menu-gral></app-menu-gral>\n<br><br><br><br>\n<div class=\"container\">\n    <div *ngIf='loading' class=\"d-flex justify-content-center mt-5\">\n        <app-spinner></app-spinner>\n    </div>\n    <div class=\"py-5 text-center\">\n        <h2>ALTA DE PELÍCULA</h2>\n    </div>\n    <div *ngIf='!loading' class=\"row\">\n        <!--Tabla actores-->\n        <div class=\"col-md-4 order-md-2 mb-4\"> \n         \n            <h4 class=\"d-flex justify-content-between align-items-center mb-3\">\n                <span class=\"text-muted\">ACTOR</span>\n            </h4>        \n            <!-- <app-tabla-pais (eventoPaisSeleccionado)=\"mostrarPais($event)\"></app-tabla-pais>    -->\n            <app-tabla-actor (seSeleccionoActor)=\"cambiarActor($event)\"></app-tabla-actor>\n        </div> \n         <!--Datos de Las Peliculas-->\n        <div class=\"col-md-8 order-md-1\">\n            <h4 class=\"mb-3\">Datos de películas</h4>\n            <form class=\"needs-validation\" [formGroup]=\"registrarForm\" (ngSubmit)=\"registar()\">\n                <div class=\"row\">\n                   <!--  Nombre de pelicula -->\n                    <div class=\"col-md-6 mb-3\">\n                        <label for=\"nombre\">Nombre(Titulo):</label>\n                        <input type=\"text\" class=\"form-control\" formControlName = 'nombre'>\n                            <span class=\"text-danger\"\n                            *ngIf=\"registrarForm.get('nombre')?.hasError('required') && registrarForm.get('nombre')?.touched\">\n                                El Nombre <strong>es requerido</strong>\n                            </span>\n                            <span class=\"text-danger\"\n                            *ngIf=\"registrarForm.get('nombre')?.hasError('minlength') && registrarForm.get('nombre')?.touched\">\n                                Nombre como minimo <strong>debe tener 4 caracteres</strong>\n                            </span>\n                    </div>\n                    <!-- Tipo -->\n                    <div class=\"col-md-6 mb-3\">\n                       <label for=\"tipo\">Tipo: (Seleccione una opción)</label>\n                        <!-- \n                        <input type=\"text\" class=\"form-control\" formControlName=\"tipo\"> -->\n                            <select class=\"form-control\" formControlName=\"tipo\" [(ngModel)] = \"opcionestipos[3]\">\n                                <option *ngFor=\"let tipos of opcionestipos\"\n                                [value]=\"tipos\" selected>{{tipos}}</option>\n                            </select>\n                            <span class=\"text-danger\"\n                            *ngIf=\"registrarForm.get('tipo')?.hasError('required') && registrarForm.get('tipo')?.touched\">\n                                El Tipo <strong>es requerido</strong>\n                            </span>\n                            <!-- <span class=\"text-danger\"\n                            *ngIf=\"registrarForm.get('tipo')?.hasError('minlength') && registrarForm.get('tipo')?.touched\">\n                                El Tipo como minimo <strong>debe tener 4 caracteres</strong>\n                            </span> -->\n                    </div>\n                    <!-- Fecha de Estreno -->\n                    <div class=\"col-md-6 mb-3\">\n                        <label for=\"fechaDeEstreno\">Fecha de Estreno: </label>\n                        <input type=\"date\" class=\"form-control\" formControlName=\"fechaDeEstreno\">\n                            <span class=\"text-danger\"\n                            *ngIf=\"registrarForm.get('fechaDeEstreno')?.hasError('required') && registrarForm.get('fechaDeEstreno')?.touched\">\n                               Fecha de Estreno <strong>es requerida</strong>\n                            </span>\n                            <!-- <span class=\"text-danger\"\n                            *ngIf=\"registrarForm.get('fechaDeEstreno')?.hasError('email') && registrarForm.get('fechaDeEstreno')?.touched\">\n                                Fecha de Estreno <strong>invalida</strong>\n                            </span> -->\n                    </div>\n                    <!-- Cantidad de Publico -->\n                    <div class=\"col-md-6 mb-3\">\n                        <label for=\"cantidadDePublico\">La cantidad de Público: </label>\n                        <input type=\"number\" class=\"form-control\" formControlName=\"cantidadDePublico\">\n                            <span class=\"text-danger\"\n                            *ngIf=\"registrarForm.get('cantidadDePublico')?.hasError('required') && registrarForm.get('cantidadDePublico')?.touched\">\n                                La Cantidad de Público <strong>es requerido</strong>\n                            </span>\n                            <!-- <span class=\"text-danger\"\n                            *ngIf=\"registrarForm.get('cantidadDePublico')?.hasError('minlength') && registrarForm.get('cantidadDePublico')?.touched\">\n                                La Cantidad de Público  <strong>invalida</strong>\n                            </span> -->\n                    </div>\n                    <!-- Foto de la Película -->\n                    <div class=\"col-md-6 mb-3\">\n                        <label for=\"fotoDeLaPelicula\">Foto de la Película: <span class=\"text-muted\">(Optional)</span></label>\n                        <input type=\"file\" (change)=\"uploadImage($event)\" class=\"form-control\" formControlName=\"fotoDeLaPelicula\">\n                            <!-- <span class=\"text-danger\"\n                            *ngIf=\"registrarForm.get('fotoDeLaPelicula')?.hasError('required') && registrarForm.get('fotoDeLaPelicula')?.touched\">\n                                La Foto de la Película <strong>es requerido</strong>\n                            </span> -->\n                            <!-- <span class=\"text-danger\"\n                            *ngIf=\"registrarForm.get('fotoDeLaPelicula')?.hasError('minlength') && registrarForm.get('fotoDeLaPelicula')?.touched\">\n                                La Foto de la Película  <strong>invalida</strong>\n                            </span>  -->\n                            \n                    </div>\n                    <!-- Apellido del Actor -->\n                    <div class=\"col-md-6 mb-3\">\n                        <label for=\"apellidoActor\">Datos del Actor:</label>\n                        <input type=\"text\" class=\"form-control\"  placeholder=\"Elegir Actor\" value=\"{{actorNombre}}\"\n                        formControlName=\"actorNombreApellido\" >\n                        <!--small class=\"invalid\" *ngIf=\"forma.controls.nacionalidad.errors?.nacionalidad\">\n                            Falta seleccionar el pais...\n                        </small\n                        placeholder=\"{{pais}}\"\n                        -->\n                    </div>\n                </div>\n                \n\n                <!-- <div class=\"mb-3\">\n                    <label for=\"actor\">Actor</label>\n                    <br>\n                    <input type=\"text\" readonly=true class=\"form-control\" id=\"actor\" [(ngModel)]=\"actorNombre\"\n                        name=\"actor\" placeholder=\"Elegir de la tabla de actores\" required>\n                </div> -->\n\n            \n                <hr class=\"mb-4\">\n                <div class=\"col-md-12 text-center\">\n                    <button type=\"submit\" [disabled]=\"registrarForm.invalid\" class=\"btn btn-primary btn-lg center-block\">Guardar</button>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { ActorService } from 'src/app/servicios/actor.service';\nimport { Actor } from 'src/app/clases/actor';\n\n@Component({\n  selector: 'app-tabla-actor',\n  templateUrl: './tabla-actor.component.html',\n  styleUrls: ['./tabla-actor.component.css']\n})\nexport class TablaActorComponent implements OnInit {\n  @Output() seSeleccionoActor: EventEmitter<any> = new EventEmitter<any>();\n\n  public listaActores: Actor[] = [];\n\n  constructor(private _actorService: ActorService) {}\n\n  ngOnInit(): void {\n    let nombre: string;\n    let apellido: string;\n    let email: string;\n    let direccion: string;\n    let pais: string;\n    //let id: string;\n    this._actorService.getActores().subscribe((actores: any) => {\n      for (let index = 0; index < actores.length; index++) {\n        const actor = actores[index];\n        nombre = actor.payload.doc.data().nombre;\n        apellido = actor.payload.doc.data().apellido;\n        email = actor.payload.doc.data().email;\n        direccion = actor.payload.doc.data().direccion;\n        pais = actor.payload.doc.data().pais;\n        //id = actor.payload.doc.id;\n        let actorAux = new Actor(nombre, apellido, email, direccion, pais);\n        //actorAux.id = id;\n        this.listaActores.push(actorAux);\n      }\n    });\n  }\n\n  SeleccionarActor(actor: Actor) {\n    this.seSeleccionoActor.emit(actor);\n  }\n  \n}\n","<ul class=\"list-group mb-3\">\n    <li class=\"list-group-item d-flex justify-content-between lh-condensed\">\n        <div>\n            <ul class=\"list-group mb-3 text-muted\">\n                <li (click)=\"SeleccionarActor(actor)\" class=\"list-group-item d-flex justify-content-between lh-condensed \"\n                    *ngFor=\"let actor of listaActores\">\n                    <span>{{actor.nombre}} &nbsp; {{actor.apellido}}</span>\n                    \n                </li>\n            </ul>\n        </div>\n    </li>\n</ul>","export enum eTipo{\n    Accion= 'accion',\n    Terror= 'terror' , \n    Comedia= 'comedia', \n    Amor='amor',\n    Suspenso='suspenso', \n    Otros='otros' \n}\n\n\n","export class Actor {\n      nombre: string;\n      apellido: string;\n      email: string;\n      direccion: string;\n      pais:string;\n\n      constructor(nombre: string, apellido: string, email: string, direccion: string, pais: string) {\n            this.nombre = nombre;\n            this.apellido = apellido;\n            this.email = email;\n            this.direccion = direccion;\n            this.pais = pais;\n        }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AltaPeliculasComponent } from './alta-peliculas/alta-peliculas.component';\nimport { ListadoPeliculasComponent } from './listado-peliculas/listado-peliculas.component';\n\nconst routes: Routes = [\n  {path:'listadoPeliculas',component:ListadoPeliculasComponent},\n  {path:'altaPeliculas',component:AltaPeliculasComponent},\n  { path: '', redirectTo: 'listadoPeliculas', pathMatch:'full'},\n  {path: '**', pathMatch: 'full', redirectTo: 'bienvenido'}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PeliculasRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { PeliculaService } from 'src/app/servicios/pelicula.service';\nimport { Pelicula } from 'src/app/clases/pelicula2';\n\n@Component({\n  selector: 'app-listado-peliculas',\n  templateUrl: './listado-peliculas.component.html',\n  styleUrls: ['./listado-peliculas.component.css']\n})\nexport class ListadoPeliculasComponent implements OnInit {\n  suscriptionList: Subscription = new Subscription();\n  listPeliculas: Pelicula[] = [];\n  loading = false;\n\n  constructor(private afAuth: AngularFireAuth,\n              private router: Router,\n              private _peliculaService: PeliculaService) { }\n\n  ngOnInit(): void {\n    this.loading = true;\n    this.getPeliculas();\n  }\n\n  getPeliculas(){\n    this.suscriptionList == this._peliculaService.getListadoPeliculas().subscribe(data =>{\n      console.log(data);\n      this.listPeliculas = [];\n      this.loading = false;\n      data.forEach((element:any) => {\n        this.listPeliculas.push({\n          id:element.payload.doc.id,\n          ...element.payload.doc.data()\n        })\n        console.log(element.payload.doc.id);\n        console.log(element.payload.doc.data());\n      });\n      console.log(this.listPeliculas);\n    })\n\n  }\n\n  ngOnDestroy(): void {\n    //this.suscriptionUser.unsubscribe();\n      this.suscriptionList.unsubscribe();\n   }\n}\n","<app-menu-gral></app-menu-gral>\n<br><br><br><br>\n<div class=\"d-flex justify-content-center mt-3\">\n    <button class=\"btn-principal btn-quizz\">LISTADO DE PELICULAS</button>\n</div>\n<div *ngIf=\"loading\" class=\"d-flex justify-content-center mt-3\">\n    <app-spinner></app-spinner>\n</div>\n<div *ngIf=\"listPeliculas.length > 0 && !loading\" class=\"container\">\n    <div class=\"row mt-3\">\n        <div class=\"col-lg-8 offset-lg-2\">\n            <div class=\"card\">\n                <div class=\"card-body text-center\">\n                    <table class=\"table\">\n                        <thead>\n                            <tr>\n                                <th>Titulo</th>\n                                <th>Tipo</th>\n                                <th>Fecha de Estreno</th>\n                                <th>Cant Público</th>\n                                <th>Foto</th>\n                                <th>Actor</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let item of listPeliculas\">\n                                <td>{{ item.nombre }}</td>\n                                <td>{{ item.tipo }}</td>\n                                <td>{{ item.fechaDeEstreno }}</td>\n                                <td>{{ item.cantidadDePublico }}</td>\n                                <!-- <td>{{ item.fotoDeLaPelicula }}</td> -->\n                                <td><img width=\"80 px\" [src]=\"item.fotoDeLaPelicula\"></td>\n                                <td>{{ item.actor }}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div *ngIf=\"listPeliculas.length == 0 && !loading\" class=\"conteiner\">\n    <div class=\"row mt-3\">\n        <div class=\"col-lg-8 offset-lg-2\">\n            <div class=\"card\">\n                <div class=\"card-body text-center\">\n                    <h5>No hay listado para mostrar</h5>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n"],"sourceRoot":"webpack:///"}