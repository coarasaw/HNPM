{"version":3,"sources":["./src/app/auth/login-registrar/login-registrar.component.ts","./src/app/auth/login-registrar/login-registrar.component.html","./src/app/shared/menu-inicio/menu-inicio.component.ts","./src/app/shared/menu-inicio/menu-inicio.component.html","./src/app/busqueda/busqueda.component.ts","./src/app/busqueda/busqueda.component.html","./src/app/auth/auth-routing.module.ts","./src/app/servicios/pelicula.service.ts","./src/environments/environment.ts","./src/app/bienvenido/bienvenido.component.html","./src/app/bienvenido/bienvenido.component.ts","./src/app/componentes/modificar-pelicula/modificar-pelicula.component.ts","./src/app/componentes/modificar-pelicula/modificar-pelicula.component.html","./src/app/shared/shared.module.ts","./src/app/bienvenido-login/bienvenido-login.component.html","./src/app/bienvenido-login/bienvenido-login.component.ts","./src/app/componentes/tabla-pelicula/tabla-pelicula.component.ts","./src/app/componentes/tabla-pelicula/tabla-pelicula.component.html","./src/app/shared/shared-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/shared/github/github.component.ts","./src/app/shared/github/github.component.html","./src/app/servicios/pais.service.ts","./src/app/componentes/borrar-pelicula/borrar-pelicula.component.ts","./src/app/componentes/borrar-pelicula/borrar-pelicula.component.html","./src/app/servicios/github.service.ts","./src/app/auth/auth.module.ts","./src/app/app.module.ts","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/clases/pelicula.ts","./src/app/shared/spinner/spinner.component.ts","./src/app/shared/spinner/spinner.component.html","./src/app/componentes/detalle-pelicula/detalle-pelicula.component.ts","./src/app/componentes/detalle-pelicula/detalle-pelicula.component.html","./src/app/app-routing.module.ts","./src/app/shared/menu-gral/menu-gral.component.ts","./src/app/shared/menu-gral/menu-gral.component.html","./src/app/servicios/error.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { ErrorService } from 'src/app/servicios/error.service';\n\n@Component({\n  selector: 'app-login-registrar',\n  templateUrl: './login-registrar.component.html',\n  styleUrls: ['./login-registrar.component.css']\n})\nexport class LoginRegistrarComponent implements OnInit {\n  registrarForm: FormGroup;\n  loading = false;\n\n  constructor(private fb: FormBuilder,\n              private afAuth : AngularFireAuth,\n              private router: Router,\n              private toastr: ToastrService,\n              private _errorService: ErrorService) { \n\n                this.registrarForm = this.fb.group({\n                  usuario: ['',[Validators.required, Validators.email]],\n                  password: ['',[Validators.required, Validators.minLength(6)]],\n                  repetirPassword: ['']\n                }, { validator: this.ckeckPassword})\n  }\n\n  ngOnInit(): void {\n  }\n\n  registar(){\n    const usuario = this.registrarForm.get('usuario')?.value;\n    const password = this.registrarForm.get('password')?.value;\n    this.loading = true;\n    this.afAuth.createUserWithEmailAndPassword(usuario,password).then(rta => {\n      this.toastr.success('El usuario fue registrado con exito!', 'Usuario registrado!');\n      this.router.navigate(['/bienvenido'])\n    }).catch(error => {\n      this.registrarForm.reset();\n      this.loading = false;\n      this.toastr.error(this._errorService.error(error.code),'Error');\n    })\n  }\n\n  ckeckPassword(group: FormGroup): any {\n    const pass = group.controls.password?.value;\n    const confirmarPassword = group.controls.repetirPassword?.value;\n    return pass === confirmarPassword ? null : { notSame: true }\n  }\n}\n","<div class=\"conteiner mt-3\">\n    <div *ngIf='loading' class=\"d-flex justify-content-center mt-5\">\n        <app-spinner></app-spinner>\n    </div>\n    <div *ngIf='!loading' class=\"row\">\n        <!-- <div class=\"col-lg-10 offset-lg-3\"> -->\n            <div class=\"card\">\n                <div class=\"card-body\">\n                    <h2 class=\"text-center\" tituloPropio>Registar Usuario</h2>\n                    <form [formGroup]=\"registrarForm\" (ngSubmit)=\"registar()\">\n                        <div class=\"mb-3\">\n                            <input type=\"text\" formControlName=\"usuario\" class=\"form-control form-control-lg\" placeholder=\"Correo\">\n                            <span class=\"text-danger\"\n                            *ngIf=\"registrarForm.get('usuario')?.hasError('required') && registrarForm.get('usuario')?.touched\">\n                                El Correo <strong>es requerido</strong>\n                            </span>\n                            <span class=\"text-danger\"\n                            *ngIf=\"registrarForm.get('usuario')?.hasError('email') && registrarForm.get('usuario')?.touched\">\n                                Correo <strong>invalido</strong>\n                            </span>\n                        </div>\n                        <div class=\"mb-3\">\n                            <input type=\"password\" formControlName=\"password\" class=\"form-control form-control-lg\" placeholder=\"Contraseña\">\n                            <span class=\"text-danger\"\n                            *ngIf=\"registrarForm.get('password')?.hasError('required') && registrarForm.get('password')?.touched\">\n                                La contraseña <strong>es requerida</strong>\n                            </span>\n                            <span class=\"text-danger\"\n                            *ngIf=\"registrarForm.get('password')?.hasError('minlength') && registrarForm.get('password')?.touched\">\n                                La contraseña como minimo <strong>debe tener 6 caracteres</strong>\n                            </span>\n                        </div>\n                        <div class=\"mb-3\">\n                            <input type=\"password\" formControlName=\"repetirPassword\" class=\"form-control form-control-lg\" placeholder=\"Repetir Contraseña\">\n                            <span class=\"text-danger\" *ngIf=\"registrarForm.hasError('notSame')\" >\n                                Contraseña <strong>distintas</strong>\n                            </span>\n                        </div>\n                        <button routerLink=\"/auth/login\" class=\"btn btn-secondary btn-lg\">Volver</button>\n                        <button type=\"submit\" [disabled]=\"registrarForm.invalid\" class=\"btn btn-primary btn-lg float-end\">Aceptar</button>\n                    </form>\n                </div>\n            </div>  \n        <!--</div>-->\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-menu-inicio',\n  templateUrl: './menu-inicio.component.html',\n  styleUrls: ['./menu-inicio.component.css']\n})\nexport class MenuInicioComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n    <a class=\"navbar-brand\" href=\"#\">Bienvenidos</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarColor02\" aria-controls=\"navbarColor02\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n\n    <div class=\"collapse navbar-collapse\" id=\"navbarColor02\">\n      <ul class=\"navbar-nav me-auto\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" [routerLink]=\"['/auth']\">Ingresar</a>\n        </li>\n      </ul>\n    </div>\n</nav>\n","import { Component, OnInit } from '@angular/core';\nimport { Pelicula } from '../clases/pelicula';\nimport { PeliculaService } from '../servicios/pelicula.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-busqueda',\n  templateUrl: './busqueda.component.html',\n  styleUrls: ['./busqueda.component.css']\n})\nexport class BusquedaComponent implements OnInit {\n  peliculaDetalle?:Pelicula;\n  peliculas?:Pelicula[]=[];\n  suscriptionList: Subscription = new Subscription();\n  elent:boolean = false;\n\n  constructor(private _peliculaService:PeliculaService) {}\n\n  ngOnInit(): void {\n    this.getPeliculas();\n  }\n  \n  mostrarDetallePelicula(peliculaRecibida:Pelicula){\n    this.peliculaDetalle= peliculaRecibida;\n    this.elent = true;\n  }\n\n  peliculaAVer(){\n    this.elent = false;\n  }\n\n  peliculaABorrar(pelicula:Pelicula){   \n    \n    const result = this.peliculas.filter((obj) => {\n      return obj.nombre != pelicula.nombre;\n    })\n    \n    this.peliculas = result;\n    this.elent = false;\n    //verifico los datos por consola\n    console.log(pelicula);\n    console.log(\"lo borra\");\n    console.log(this.peliculas);\n    console.log('Resultado ',result);\n   \n  }\n\n  peliculaAModificar(pelicula:Pelicula){\n   this._peliculaService.peliculas.forEach(element => {\n      if (element.id === pelicula.id) {\n          element.nombre === pelicula.nombre;\n          element.cantidadDePublico === pelicula.cantidadDePublico;\n          element.fechaDeEstreno === pelicula.fechaDeEstreno;\n      }\n    });\n    this.elent = false;\n  }\n\n  getPeliculas(){\n    this.suscriptionList == this._peliculaService.getListadoPeliculas().subscribe(data =>{\n      console.log(data);\n      this.peliculas = [];\n      //this.loading = false;\n      data.forEach((element:any) => {\n        this.peliculas.push({\n          id:element.payload.doc.id,\n          ...element.payload.doc.data()\n        })\n        console.log(element.payload.doc.id);\n        console.log(element.payload.doc.data());\n      });\n      console.log(this.peliculas);\n    })\n\n  }\n\n  ngOnDestroy(): void {\n    //this.suscriptionUser.unsubscribe();\n      this.suscriptionList.unsubscribe();\n   }\n\n}\n","<app-menu-gral></app-menu-gral>\n<!-- <main role=\"main\"> -->\n  \n    <!-- Main jumbotron for a primary marketing message or call to action &raquo;-->\n    <div class=\"jumbotron\">\n      <div class=\"container\">\n          <app-tabla-pelicula [listadoPeliculas]=\"peliculas\" (onPeliculaSelccionada)=\"mostrarDetallePelicula($event)\"></app-tabla-pelicula>  \n      </div>\n    \n      <div class=\"container\" *ngIf=\"elent\">\n        <!-- Example row of columns -->\n        <div class=\"row\">\n          <div class=\"col-md-4\">\n            <!-- Borrar -->\n            <app-borrar-pelicula  [peliculaDetalle]=\"peliculaDetalle\" (onPeliculaABorrar)=\"peliculaABorrar($event)\"></app-borrar-pelicula>\n          </div>\n          <div class=\"col-md-4\">\n            <!-- Detalle -->\n            <app-detalle-pelicula [peliculaDetalle]=\"peliculaDetalle\" (onPeliculaADetalle)=\"peliculaAVer($event)\"></app-detalle-pelicula>\n          </div>\n          <div class=\"col-md-4\">\n            <!-- Modificar -->\n            <app-modificar-pelicula [peliculaDetalle]=\"peliculaDetalle\" (onPeliculaAModifica)=\"peliculaAModificar($event)\"></app-modificar-pelicula>\n          </div>\n        </div>       \n                  \n    </div> <!-- jumbotronr -->\n<!--  </main> -->","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n//Componentes Propios\nimport { LoginComponent } from './login/login.component';\nimport { LoginRegistrarComponent } from './login-registrar/login-registrar.component';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'registrar', component: LoginRegistrarComponent},  \n  { path: '', redirectTo: 'login',pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { eTipo } from '../clases/enum.enum';\nimport { Pelicula } from '../clases/pelicula';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PeliculaService {\n  /* peliculas: Pelicula[]=[\n    {id: 1, nombre: 'Shrek', tipo: eTipo.Comedia, fechaDeEstreno:'18/05/2001', cantidadDePublico:10, fotoDeLaPelicula:'https://xl.movieposterdb.com/21_09/2001/126029/xl_126029_26c17ee4.jpg'},\n    {id: 2, nombre: 'Shrek 2 ', tipo: eTipo.Amor, fechaDeEstreno:'21/05/2004', cantidadDePublico:10, fotoDeLaPelicula:'https://static.posters.cz/image/750/posters/shrek-2-one-sheet-i653.jpg'},\n    {id: 3, nombre: 'Shrek Tercero', tipo: eTipo.Terror, fechaDeEstreno:'18/05/2007', cantidadDePublico:10, fotoDeLaPelicula:'https://es.web.img3.acsta.net/medias/nmedia/18/68/23/20/20054548.jpg'},\n    {id: 4, nombre: 'Shrek Para Siempre', tipo: eTipo.Otros, fechaDeEstreno:'21/05/2010', cantidadDePublico:10, fotoDeLaPelicula:'https://images-na.ssl-images-amazon.com/images/S/pv-target-images/17c2c2152f507492dcbae81b3fcfa43c1fd82cbf75d168b8d2b2331bbbd5712f._RI_V_TTW_.jpg'}\n\n  ]; */\n\n  peliculas: Pelicula[]=[];  \n\n\n  constructor(private _firestore: AngularFirestore) { }\n\n  crearActor(peliculaDato:Pelicula){\n    return this._firestore.collection('peliculas').add(peliculaDato);\n  } \n\n  getListadoPeliculas(): Observable<any>{\n    return this._firestore.collection('peliculas').stateChanges();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyCmvIbZDDgj-QlbQpr1br4BlTmVzKKKQgg\",\n    authDomain: \"primerparciallab4-e0a36.firebaseapp.com\",\n    projectId: \"primerparciallab4-e0a36\",\n    storageBucket: \"primerparciallab4-e0a36.appspot.com\",\n    messagingSenderId: \"442215050693\",\n    appId: \"1:442215050693:web:76d3829f0010026f35afac\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<app-menu-gral></app-menu-gral>\n<div class=\"container\"> \n    <div class=\"jumbotron\">\n        <app-github  *ngIf=\"user\" [user]=\"user\"></app-github>\n    </div>   \n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Github } from '../clases/github';\nimport { GithubService } from '../servicios/github.service';\nimport { PaisService } from '../servicios/pais.service';\n\n@Component({\n  selector: 'app-bienvenido',\n  templateUrl: './bienvenido.component.html',\n  styleUrls: ['./bienvenido.component.css']\n})\nexport class BienvenidoComponent implements OnInit {\n  user: Github=null;\n  \n  constructor(private _githubService:GithubService,\n              private _ws:PaisService  ) { }\n\n  ngOnInit(): void {\n    this._githubService.getUser().subscribe(user => this.user = user); \n    //this.getWS();\n  }\n   \n  /* getWS(){\n    this._ws.getWSIOSFA();\n  } */\n  \n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Pelicula } from 'src/app/clases/pelicula';\n\n@Component({\n  selector: 'app-modificar-pelicula',\n  templateUrl: './modificar-pelicula.component.html',\n  styleUrls: ['./modificar-pelicula.component.css']\n})\nexport class ModificarPeliculaComponent implements OnInit {\n\n  @Input() peliculaDetalle:any | Pelicula;\n  @Output() onPeliculaAModifica:EventEmitter<Pelicula>= new EventEmitter();\n  nuevaPelicula = Pelicula;\n  \n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  modificarPelicula(peliculaModificada:Pelicula){\n    this.onPeliculaAModifica.emit(peliculaModificada);\n  }\n\n}","<h2>Modificar</h2>\n<div class=\"col-md-8\">\n   <!--  <h2>[{{peliculaDetalle.id}}]</h2> -->\n   <!--  <p>Aqui van los controles necesarios, segun la etidad y funcionalidad requeridad. </p> -->\n   <strong><span>Nombre: <input type=\"text\" class=\"form-control\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" [(ngModel)] = \"peliculaDetalle.nombre\"> </span></strong>\n   <br>\n   <span>Genero: {{peliculaDetalle.tipo}} </span> \n   <br>\n   <img [src]=\"peliculaDetalle.fotoDeLaPelicula\" width=\"100px\">\n   <br>\n   <p><strong><span>Publico: <input type=\"text\" class=\"form-control\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" [(ngModel)] = \"peliculaDetalle.cantidadDePublico\"> </span></strong> </p>\n   <p><strong><span>Estreno: <input type=\"text\" class=\"form-control\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" [(ngModel)] = \"peliculaDetalle.fechaDeEstreno\"> </span></strong></p>\n    <button class=\"btn btn-secondary\" (click)=\"modificarPelicula(peliculaDetalle)\" >Guardar</button>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SharedRoutingModule } from './shared-routing.module';\nimport { MenuGralComponent } from './menu-gral/menu-gral.component';\nimport { SpinnerComponent } from './spinner/spinner.component';\nimport { GithubComponent } from './github/github.component';\nimport { MenuInicioComponent } from './menu-inicio/menu-inicio.component';\n\n\n@NgModule({\n  declarations: [\n    MenuGralComponent,\n    SpinnerComponent,\n    GithubComponent,\n    MenuInicioComponent\n  ],\n  exports:[\n    MenuGralComponent,\n    GithubComponent,\n    MenuInicioComponent\n  ],\n  imports: [\n    CommonModule,\n    SharedRoutingModule\n  ]\n})\nexport class SharedModule { }\n","<app-menu-inicio></app-menu-inicio>\n<div class=\"container\"> \n    <div class=\"jumbotron\">\n        <app-github  *ngIf=\"user\" [user]=\"user\"></app-github>\n    </div>   \n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Github } from '../clases/github';\nimport { GithubService } from '../servicios/github.service';\n\n@Component({\n  selector: 'app-bienvenido-login',\n  templateUrl: './bienvenido-login.component.html',\n  styleUrls: ['./bienvenido-login.component.css']\n})\nexport class BienvenidoLoginComponent implements OnInit {\n  user: Github=null;\n\n  constructor(private _githubService:GithubService) { }\n\n  ngOnInit(): void {\n    this._githubService.getUser().subscribe(user => this.user = user); \n  }\n\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Pelicula } from 'src/app/clases/pelicula';\n\n@Component({\n  selector: 'app-tabla-pelicula',\n  templateUrl: './tabla-pelicula.component.html',\n  styleUrls: ['./tabla-pelicula.component.css']\n})\n\nexport class TablaPeliculaComponent implements OnInit {\n  public vista: boolean = true;\n  @Input()  listadoPeliculas:Pelicula[]=[];\n  @Output() onPeliculaSelccionada:EventEmitter<Pelicula>= new EventEmitter();\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  mostrarDetallePelicula(pelicula:Pelicula){\n    this.onPeliculaSelccionada.emit(pelicula);\n  }\n\n  CambiarVista() {\n    if (this.vista == true) {\n      this.vista = false;\n    }\n    else {\n      this.vista = true;\n    }\n  }\n\n}","<h1 class=\"display-3\">Listado de Peliculas</h1>\n<p>Se debe utilizar tanto como grilla, con la posibilidad de intercalar la vista entre ambas.</p>\n<table *ngIf=\"vista\" class=\"table\">\n  <thead>\n    <tr>\n      <th scope=\"col\">Pelicula</th>\n      <th scope=\"col\">Imagen</th>\n      <th scope=\"col\">Seleccionar</th>\n      <!-- <th scope=\"col\">Detalle</th>\n      <th scope=\"col\">Modificar</th> -->\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let itempelicula of listadoPeliculas\">\n      <td>{{itempelicula.nombre}}</td>\n      <td><img width=\"80 px\" [src]=\"itempelicula.fotoDeLaPelicula\"></td>\n     <!--  <td><button type=\"button\" class=\" btn btn-info btn-circle btn-danger\"  (click)=\"bajaDetallePelicula(itempelicula)\"></button></td> --> <!-- Borrar -->\n      <td><button type=\"button\" class=\" btn btn-info btn-circle btn-warning\" (click)=\"mostrarDetallePelicula(itempelicula)\"></button></td>  <!-- Detalle -->\n      <!-- <td><button type=\"button\" class=\" btn btn-info btn-circle btn-success\"></button></td>  --> <!-- Modificar -->\n    </tr>\n  </tbody>\n</table>\n\n<div *ngIf=\"!vista\"  class=\"wrapper\">\n\n  <div (click)=\"mostrarDetallePelicula(itempelicula)\" *ngFor=\"let itempelicula of listadoPeliculas\">\n      <img width=\"80 px\" [src]=\"itempelicula.fotoDeLaPelicula\">\n      <span>{{itempelicula.nombre}}</span>\n  </div>\n</div>\n<br>\n<p><a class=\"btn btn-primary btn-lg\" (click)=\"CambiarVista()\" role=\"button\">Cambiar vista  </a></p>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SharedRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Simulacro4';\n}\n","<router-outlet></router-outlet>","import { Component, OnInit , Input, ChangeDetectionStrategy} from '@angular/core';\nimport { Github } from 'src/app/clases/github';\n\n@Component({\n  selector: 'app-github',\n  templateUrl: './github.component.html',\n  styleUrls: ['./github.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GithubComponent implements OnInit {\n  @Input() user:Github;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"github-card user-card\">\n    <div class=\"header\"></div>\n    <a href=\"{{user.html_url}}\" class=\"avatar\">\n        <img [src]=\"user.avatar_url+'&s=80'\" [alt]=\"user.name\">\n    </a>\n    <div class=\"content\">\n        <h1>{{user.name}}</h1>\n    </div>\n    <!-- <div class=\"alert alert-success\">\n        <p class=\"mn-0\">{{user.bio}}</p>\n    </div> -->\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { Parametros } from '../interfaces/parametros';\nimport { Country } from '../interfaces/pais.interface';\nimport { tap } from 'rxjs/operators';\nimport { Options } from 'selenium-webdriver';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PaisService {\n\n  private apiUrl: string = 'https://restcountries.com/v3.1'; //'https://restcountries.com/v2';\n\n  constructor(private http: HttpClient) { }\n\n  getPaises(): Observable<any>{\n   // return this.http.get(`https://restcountries.com/v3.1/all`);\n    return this.http.get(`https://restcountries.com/v3.1/region/Europe`);\n  }\n\n  getPaisByName(name:string):Observable<any>\n  { \n    var url = \"`https://restcountries.com/v3.1/name/${name}`\";\n    console.log(url);\n    return this.http.get(`https://restcountries.com/v3.1/name/${name}`);\n  }\n\n  get httpParams () {\n    return new HttpParams().set( 'fields', 'name,capital,flags,population' );\n  }\n\n  buscarPais( termino: string ): Observable<Country[]> {\n    const url = `${ this.apiUrl }/name/${ termino }`;\n    \n    return this.http.get<Country[]>( url, { params: this.httpParams } );\n  }\n\n  buscarRegion( region: string ): Observable<Country[]> {\n\n    const url = `${ this.apiUrl }/region/${ region }`;\n\n    return this.http.get<Country[]>( url, { params: this.httpParams } )\n            .pipe(\n              tap( console.log )\n            )\n  }\n\n  getPaisesParametro(region: string): Observable<any>{\n    // return this.http.get(`https://restcountries.com/v3.1/all`);\n     return this.http.get(`https://restcountries.com/v3.1/region/${ region }`);\n   }\n\n   //WS IOSFA\n\n   /* getWSIOSFA(){\n    let me:any = this.getWSDNI();\n    console.log(me);\n    return null;\n  }\n\n  get httpParamsDNI () {\n    return new HttpParams().set( 'fields','szPassword,szReqParam' );\n  } */\n\n  /* getWSDNI(): Observable<string> {\n    const parametros: Parametros = {\n      szPassword: \"30-54669501-4\",\n      szReqParam: \"{'Request': {'Prestador': {'Cuit': '30-54669501-4','Provincia': 'CORDOBA','Localidad': 'CORDOBA','UnidadDeNegocio': 'HOSPITAL MILITAR','Area': 'CONTADURIA','EstacionDeTrabajo': '4128'},'Metodo': 'VALIDAR_POR_DNI','Parametros': { 'Dni': '3698387' }}}\"\n    }\n    const baseURL = \"`http://validador.iosfa.gob.ar:5080/WebServices/WSAutorizacion.asmx`\";\n    \n\n    const params = new HttpParams({fromString: 'name=term'});\n    \n   //return this.http.request('GET', baseURL, {responseType:'json', this.httpParamsDNI});\n    return this.http.request('get', URL: \"http://validador.iosfa.gob.ar:5080/WebServices/WSAutorizacion.asmx\", Options:{response:'json', params});\n    //return this.http.get<string>( baseURL, { params: this.httpParamsDNI } )\n            \n  } */\n  \n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Pelicula } from 'src/app/clases/pelicula';\n\n@Component({\n  selector: 'app-borrar-pelicula',\n  templateUrl: './borrar-pelicula.component.html',\n  styleUrls: ['./borrar-pelicula.component.css']\n})\nexport class BorrarPeliculaComponent implements OnInit {\n\n  @Input() peliculaDetalle: Pelicula;\n  @Output() onPeliculaABorrar:EventEmitter<Pelicula>= new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  borrarPelicula(pelicula:Pelicula){\n    this.onPeliculaABorrar.emit(pelicula);\n  }\n\n}\n","<h2>Borrar</h2>\n<div class=\"col-md-8\">\n    <!-- <h2>[{{peliculaDetalle.id}}]</h2> -->\n   <!--  <p>Aqui van los controles necesarios, segun la entidad y funcionalidad requeridad. </p> -->\n   <strong><span>{{peliculaDetalle.nombre}} </span></strong>\n   <br>\n   <span>Genero: {{peliculaDetalle.tipo}} </span> \n   <br>\n   <img [src]=\"peliculaDetalle.fotoDeLaPelicula\" width=\"100px\">\n   <br>\n   <p>Publico: {{peliculaDetalle.cantidadDePublico}} </p>\n   <p>Estreno: {{peliculaDetalle.fechaDeEstreno}} </p>\n   <button class=\"btn btn-secondary\" (click)=\"borrarPelicula(peliculaDetalle)\" role=\"button\">Borrar</button>\n</div> \n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Github } from './../clases/github';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GithubService {\n\n  constructor(private http: HttpClient) { }\n\n  getUser(): Observable<Github>{\n  const url = 'https://api.github.com/users/coarasaw';\n    return this.http.get<Github>(url);\n  }  \n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { LoginComponent } from './login/login.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { LoginRegistrarComponent } from './login-registrar/login-registrar.component';\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    LoginRegistrarComponent,   \n  ],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    SharedModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ]\n})\nexport class AuthModule { }\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n//Propias\nimport { BienvenidoComponent } from './bienvenido/bienvenido.component';\nimport { BusquedaComponent } from './busqueda/busqueda.component';\nimport { BorrarPeliculaComponent } from './componentes/borrar-pelicula/borrar-pelicula.component';\nimport { DetallePeliculaComponent } from './componentes/detalle-pelicula/detalle-pelicula.component';\nimport { ModificarPeliculaComponent } from './componentes/modificar-pelicula/modificar-pelicula.component';\nimport { TablaPeliculaComponent } from './componentes/tabla-pelicula/tabla-pelicula.component';\nimport { SharedModule } from './shared/shared.module';\n\n//Formularios\nimport { FormsModule } from '@angular/forms';\n//firebase\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { AngularFireAuthModule} from '@angular/fire/auth';\nimport { environment } from 'src/environments/environment';\n//api\nimport { HttpClientModule } from '@angular/common/http';\n//toast\nimport { ToastrModule, ToastrService } from 'ngx-toastr';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AuthModule } from './auth/auth.module';\nimport { BienvenidoLoginComponent } from './bienvenido-login/bienvenido-login.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    //Propias\n    BienvenidoComponent,\n    BusquedaComponent,\n    BorrarPeliculaComponent,\n    DetallePeliculaComponent,\n    ModificarPeliculaComponent,\n    TablaPeliculaComponent,\n    BienvenidoLoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    SharedModule,\n    FormsModule,\n    //firebase\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireAuthModule,\n    AngularFirestoreModule,\n    //toast\n    ToastrModule.forRoot(),\n    BrowserAnimationsModule,\n    //api\n    HttpClientModule,\n    AuthModule\n    \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { ErrorService } from 'src/app/servicios/error.service';\nimport { Router } from '@angular/router';\nimport { User } from '../../interfaces/user';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  loading = false;\n  muestroCorreo: string;\n  muestroClave: string;\n \n  constructor(private rutas:Router,\n              private fb: FormBuilder,\n              private afAuth : AngularFireAuth,\n              private _errorService: ErrorService,\n              private toastr: ToastrService  \n  ){\n    \n    this.loginForm = this.fb.group({\n      usuarioCorreo: ['',[Validators.required,Validators.email]],\n      usuarioClave: ['', Validators.required]\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n  automaticoLogin(){\n    //this.VendedorForm.controls['nombres'].setValue(response.body.data.nombres);\n    this.loginForm.controls['usuarioCorreo'].setValue('danny@gmail.com');\n    this.loginForm.controls['usuarioClave'].setValue('pepe123');\n  }\n\n  adinistradorLogin(){\n    this.loginForm.controls['usuarioCorreo'].setValue('admin@gmail.com');\n    this.loginForm.controls['usuarioClave'].setValue('admin123');\n  }\n\n  loginSiguiente(){\n      //console.log(this.loginForm)\n      const usuario = this.loginForm.get('usuarioCorreo')?.value;\n      const password = this.loginForm.get('usuarioClave')?.value;\n\n      this.loading = true;\n      this.afAuth.signInWithEmailAndPassword(usuario,password).then((respuesta) => {\n      //console.log(respuesta);\n      this.loading = false;\n      this.setLocalStorage(respuesta.user);\n      this.rutas.navigate(['/bienvenido']);\n    }, error => {\n      this.loading = false;\n      this.toastr.error(this._errorService.error(error.code),'Error')\n      this.loginForm.reset();\n    }) \n  }\n\n  setLocalStorage(user: any){\n    const usuario: User = {\n      uid: user.uid,\n      email: user.email\n    }\n    localStorage.setItem('user', JSON.stringify(usuario)); \n  }\n\n}\n","<div class=\"conteiner mt-3\">\n    <div *ngIf='loading' class=\"d-flex justify-content-center mt-5\">\n      <app-spinner></app-spinner>\n    </div>\n    <div *ngIf='!loading' class=\"row\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <div class=\"contenedorLogin\">\n            <div>\n              <h2 class=\"text-left tituloPropio\">LOGIN</h2>\n            </div>\n            <!-- <div>\n              <img src=\"../../../../assets/login/login3.svg\" alt=\"Login\" width=\"100\" height=\"100\">\n            </div> -->\n          </div>\n          <form [formGroup]='loginForm' (ngSubmit)=\"loginSiguiente()\">\n            <div class=\"mb-3\">\n              <input type=\"text\" formControlName=\"usuarioCorreo\" class=\"from-control form-control-lg\" placeholder=\"Correo\" [value]=\"muestroCorreo\">\n              <br>\n              <span class=\"text-danger\" \n              *ngIf=\"loginForm.get('usuarioCorreo')?.hasError('required') && loginForm.get('usuarioCorreo')?.touched\">\n                El correo  <strong>es requerido</strong>\n              </span>\n              <span class=\"text-danger\" *ngIf=\"loginForm.get('usuarioCorreo')?.hasError('email') && loginForm.get('usuarioCorreo')?.touched\">\n                Correo  <strong>invalido</strong>\n              </span>\n            </div>\n            <div class=\"mb-3\">\n              <input type=\"password\" formControlName=\"usuarioClave\"  class=\"from-control form-control-lg\" placeholder=\"Contraseña\" [value]=\"muestroClave\">\n              <br>\n              <span class=\"text-danger\" \n              *ngIf=\"loginForm.get('usuarioClave')?.hasError('required') && loginForm.get('usuarioClave')?.touched\">\n              La contraseña  <strong>es requerido</strong>\n              </span> \n            </div>\n            <div>\n              <button type=\"submit\" [disabled]=\"loginForm.invalid\" class=\"btn btn-primary btn-lg\">Aceptar</button>\n              <button type=\"button\" (click)=automaticoLogin() class=\"btn btn-primary btn-lg float-right\">Login (in)</button>\n            </div>\n            <br>  \n            <div class = \"text-center\" >\n              <button type=\"button\" class=\"btn btn-primary \" (click)=adinistradorLogin() >Administrador (in)</button>\n            </div>\n          </form>\n          <br>\n          <!-- <div class=\"text-center\">\n            <a routerLink=\"/auth/registrar\">Registrarse</a>\n            <br>\n          </div> -->\n        </div>\n      </div>\n    </div> \n  </div> ","import { eTipo } from \"../clases/enum.enum\";\n\nexport class Pelicula {\n    id: number;\n    nombre: string;\n    tipo: eTipo;\n    fechaDeEstreno: string;\n    cantidadDePublico: number;\n    fotoDeLaPelicula: string;\n    actor: string;\n    //actorId: string;\n\n    constructor(id: number,nombre: string, tipo: eTipo, fechaDeEstreno: string, \n                cantidadDePublico: number, fotoDeLaPelicula: string,actor:string) {\n        this.id = id;\n        this.nombre = nombre;\n        this.tipo = tipo;\n        this.fechaDeEstreno = fechaDeEstreno;\n        this.cantidadDePublico = cantidadDePublico;\n        this.fotoDeLaPelicula = fotoDeLaPelicula;\n        this.actor = actor;\n    }\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.css']\n})\nexport class SpinnerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"sk-chase\">\n    <div class=\"sk-chase-dot\"></div>\n    <div class=\"sk-chase-dot\"></div>\n    <div class=\"sk-chase-dot\"></div>\n    <div class=\"sk-chase-dot\"></div>\n    <div class=\"sk-chase-dot\"></div>\n    <div class=\"sk-chase-dot\"></div>\n</div>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Pelicula } from 'src/app/clases/pelicula';\n\n@Component({\n  selector: 'app-detalle-pelicula',\n  templateUrl: './detalle-pelicula.component.html',\n  styleUrls: ['./detalle-pelicula.component.css']\n})\nexport class DetallePeliculaComponent implements OnInit {\n\n  @Input() peliculaDetalle: Pelicula;\n  @Output() onPeliculaADetalle:EventEmitter<Pelicula>= new EventEmitter(); \n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  limpiar(peliculaDetalle:Pelicula){\n    this.onPeliculaADetalle.emit(peliculaDetalle);\n  }\n}\n","<h2>Mostrar</h2>\n<div class=\"col-md-8\">\n    <!-- <h2>[{{peliculaDetalle.id}}]</h2> -->\n   <!--  <p>Aqui van los controles necesarios, segun la entidad y funcionalidad requeridad. </p> -->\n   <strong><span>{{peliculaDetalle.nombre}} </span></strong>\n   <br>\n   <span>Genero: {{peliculaDetalle.tipo}} </span> \n   <br>\n   <img [src]=\"peliculaDetalle.fotoDeLaPelicula\" width=\"100px\">\n   <br>\n   <p>Publico: {{peliculaDetalle.cantidadDePublico}} </p>\n   <p>Estreno: {{peliculaDetalle.fechaDeEstreno}} </p>\n   <button class=\"btn btn-secondary\" (click)=\"limpiar(peliculaDetalle)\" role=\"button\">Limpiar</button>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { BienvenidoComponent } from './bienvenido/bienvenido.component';\nimport { BusquedaComponent } from './busqueda/busqueda.component';\nimport { BienvenidoLoginComponent } from './bienvenido-login/bienvenido-login.component';\n\nconst routes: Routes = [\n  {\n    path: 'auth',\n    loadChildren: () => import('./auth/auth.module').then( m => m.AuthModule)\n  },\n  { path: 'bienvenido',component: BienvenidoComponent},\n  { path: 'bienvenidoLogin',component: BienvenidoLoginComponent},\n  { path: 'busqueda',component: BusquedaComponent },\n  {\n    path: 'peliculas',\n          loadChildren: () => import('./peliculas/peliculas.module')\n          .then(m => m.PeliculasModule)\n  },\n  {\n    path: 'actores',\n          loadChildren: () => import('./actores/actores.module')\n          .then(m => m.ActoresModule)\n  },\n  {\n    path: 'pizzas',\n          loadChildren: () => import('./pizzas/pizzas.module')\n          .then(m => m.PizzasModule)\n  },\n  { path: '', redirectTo: 'bienvenidoLogin', pathMatch: 'full' },\n  { path: '**', pathMatch: 'full', redirectTo: 'bienvenidoLogin' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\nfunction canActivate(arg0: string, canActivate: any, arg2: any[]) {\n  throw new Error('Function not implemented.');\n}\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-menu-gral',\n  templateUrl: './menu-gral.component.html',\n  styleUrls: ['./menu-gral.component.css']\n})\nexport class MenuGralComponent implements OnInit {\n\n  constructor(private rutas: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  inicio(){\n    this.rutas.navigate(['bienvenido']);\n  }\n\n  pizzas(){\n    this.rutas.navigate(['pizzas/pizzas']);\n  }\n\n  busqueda(){\n    this.rutas.navigate(['busqueda']);\n  }\n\n  // Peliculas\n  altaPelicula(){\n    this.rutas.navigate(['peliculas/altaPeliculas']);\n  }\n  listadoPelicula(){\n    this.rutas.navigate(['peliculas/listadoPeliculas']);\n  }\n\n  // Actores\n  actor(){\n    this.rutas.navigate(['actores/altActor']);\n  }\n  listadoActor(){\n    this.rutas.navigate(['actores/listadoActores']);\n  }\n  peliculaActor(){\n    this.rutas.navigate(['actores/peliculaActor']);\n  }\n\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\">\n    <div class=\"collapse navbar-collapse\" id=\"navbarsExampleDefault\">\n      <ul class=\"navbar-nav mr-auto\">\n        <li class=\"nav-item active\">\n          <a class=\"nav-link\" (click)=inicio()>Bienvenidos<span class=\"sr-only\">(current)</span></a>\n        </li>\n       \n        <!-- Peliculas -->\n        <!-- <li class=\"nav-item dropdown\">\n          <a class=\"nav-link dropdown-toggle\" id=\"dropdown01\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\n              aria-expanded=\"false\">Películas</a>\n          <ul class=\"dropdown-menu\" aria-labelledby=\"dropdown01\">\n              <li> <a class=\"dropdown-item\" (click)=altaPelicula()>Alta</a></li>\n              <li> <a class=\"dropdown-item\" (click)=listadoPelicula()>Listado</a></li>\n          </ul>\n        </li>  -->\n        <!--  Actores -->\n        <li class=\"nav-item dropdown\">\n            <a class=\"nav-link dropdown-toggle\" id=\"dropdown02\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\n                aria-expanded=\"false\">Repartidor</a>\n            <ul class=\"dropdown-menu\" aria-labelledby=\"dropdown02\">\n                <li> <a class=\"dropdown-item\" (click)=actor()>Alta</a></li>\n                <!-- <li> <a class=\"dropdown-item\" (click)=listadoActor()>Listado</a></li> -->\n                <li> <a class=\"dropdown-item\" (click)=peliculaActor()>Repartidor detalle</a></li>\n            </ul>\n        </li> \n        <li class=\"nav-item active\">\n          <a class=\"nav-link\" (click)=pizzas()>Pizzas<span class=\"sr-only\"></span></a>\n        </li>\n      </ul>\n    </div>\n</nav>","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorService {\n\n  constructor() { }\n\n  error(code: string):string{\n    switch(code){\n      // Email ya registrado\n      case 'auth/email-already-in-use':\n        return 'El Correo ya esta registrado'\n\n      // Correo invalido\n      case 'auth/invalid-email':\n        return 'El Correo es invalido'\n\n      // La Contraseña es muy debil\n      case 'auth/weak-password':\n        return 'La Contraseña es muy debil'\n\n      case 'auth/user-not-found':\n        return 'Usuario invalido'  \n\n      case 'auth/wrong-password':\n        return 'La contraseña es invalida'  \n\n      default:\n        return 'Error desconocido';\n    }\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}